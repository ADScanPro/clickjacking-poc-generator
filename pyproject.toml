[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "clickjacking-poc-generator"
version = "1.0.0"
description = "Automated tool to generate HTML Proof of Concept files for clickjacking vulnerabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Security Researcher", email = "security@example.com"}
]
maintainers = [
    {name = "Security Researcher", email = "security@example.com"}
]
keywords = ["security", "clickjacking", "poc", "vulnerability", "testing", "web security"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "Topic :: Internet :: WWW/HTTP",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/clickjacking-poc-generator"
Documentation = "https://github.com/yourusername/clickjacking-poc-generator#readme"
Repository = "https://github.com/yourusername/clickjacking-poc-generator"
"Bug Tracker" = "https://github.com/yourusername/clickjacking-poc-generator/issues"
Changelog = "https://github.com/yourusername/clickjacking-poc-generator/blob/main/CHANGELOG.md"

[project.scripts]
clickjacking-poc = "clickjacking_poc_generator.cli:main"
clickjacking-poc-generator = "clickjacking_poc_generator.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["clickjacking_poc_generator*"]

[tool.setuptools.package-data]
"*" = ["*.html", "*.txt", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101", "B601"]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=clickjacking_poc_generator",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["clickjacking_poc_generator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
